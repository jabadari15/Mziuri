"""
class Person {

    private String firstName; // İlk ad
    private String lastName;  // Soyad
    private int age;          // Yaş


    public Person(String firstName, String lastName, int age) {
        this.firstName = firstName;  // İlk adı atama
        this.lastName = lastName;    // Soyadı atama
        this.age = age;              // Yaş atama
    }


    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }


    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }


    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }


    @Override
    public String toString() {
        return "Person [First Name=" + firstName + ", Last Name=" + lastName + ", Age=" + age + "]";
    }
}


class Employee extends Person {

    private String employeeId;


    public Employee(String firstName, String lastName, int age, String employeeId) {
        super(firstName, lastName, age);  // Person sınıfının yapıcısını çağırıyoruz
        this.employeeId = employeeId;     // Çalışan kimliğini atama
    }


    public String getEmployeeId() {
        return employeeId;
    }

    public void setEmployeeId(String employeeId) {
        this.employeeId = employeeId;
    }


    @Override
    public String toString() {
        return super.toString() + ", Employee ID=" + employeeId + "]";
    }
}


class Manager extends Employee {

    private String managerId;


    public Manager(String firstName, String lastName, int age, String employeeId, String managerId) {
        super(firstName, lastName, age, employeeId); // Employee sınıfının yapıcısını çağırıyoruz
        this.managerId = managerId;                  // Yönetici kimliğini atama
    }


    public String getManagerId() {
        return managerId;
    }

    public void setManagerId(String managerId) {
        this.managerId = managerId;
    }


    @Override
    public String toString() {
        return super.toString() + ", Manager ID=" + managerId + "]";
    }
}


public class Main {
    public static void main(String[] args) {

        Person person = new Person("Ali", "Yılmaz", 45);
        System.out.println(person);  // Kişiyi yazdırıyoruz


        Employee employee = new Employee("Ayşe", "Kara", 30, "12345");
        System.out.println(employee);  // Çalışanı yazdırıyoruz


        Manager manager = new Manager("Mehmet", "Çelik", 40, "67890", "001");
        System.out.println(manager);  // Yöneticiyi yazdırıyoruz
    }
}


abstract class Figure {
    public abstract double getArea();
    public abstract double getPerimeter();
}

class Circle extends Figure {
    private double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    public double getRadius() {
        return radius;
    }

    public void setRadius(double radius) {
        this.radius = radius;
    }

    @Override
    public double getArea() {
        return Math.PI * radius * radius;
    }

    @Override
    public double getPerimeter() {
        return 2 * Math.PI * radius;
    }

    @Override
    public String toString() {
        return "Circle [Radius=" + radius + "]";
    }
}

class Rectangle extends Figure {
    private double length;
    private double width;

    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }

    public double getLength() {
        return length;
    }

    public void setLength(double length) {
        this.length = length;
    }

    public double getWidth() {
        return width;
    }

    public void setWidth(double width) {
        this.width = width;
    }

    @Override
    public double getArea() {
        return length * width;
    }

    @Override
    public double getPerimeter() {
        return 2 * (length + width);
    }

    public double getDiagonal() {
        return Math.sqrt(length * length + width * width);
    }

    @Override
    public String toString() {
        return "Rectangle [Length=" + length + ", Width=" + width + "]";
    }
}

class Triangle extends Figure {
    private double side1;
    private double side2;
    private double side3;

    public Triangle(double side1, double side2, double side3) {
        this.side1 = side1;
        this.side2 = side2;
        this.side3 = side3;
    }

    public double getSide1() {
        return side1;
    }

    public void setSide1(double side1) {
        this.side1 = side1;
    }

    public double getSide2() {
        return side2;
    }

    public void setSide2(double side2) {
        this.side2 = side2;
    }

    public double getSide3() {
        return side3;
    }

    public void setSide3(double side3) {
        this.side3 = side3;
    }

    @Override
    public double getArea() {
        double s = (side1 + side2 + side3) / 2;
        return Math.sqrt(s * (s - side1) * (s - side2) * (s - side3));
    }

    @Override
    public double getPerimeter() {
        return side1 + side2 + side3;
    }

    @Override
    public String toString() {
        return "Triangle [Side1=" + side1 + ", Side2=" + side2 + ", Side3=" + side3 + "]";
    }
}

public class Main {
    public static void main(String[] args) {
        Figure circle = new Circle(5.0);
        System.out.println(circle);
        System.out.println("Area: " + circle.getArea());
        System.out.println("Perimeter: " + circle.getPerimeter());

        Figure rectangle = new Rectangle(4.0, 6.0);
        System.out.println(rectangle);
        System.out.println("Area: " + rectangle.getArea());
        System.out.println("Perimeter: " + rectangle.getPerimeter());
        System.out.println("Diagonal: " + ((Rectangle)rectangle).getDiagonal());

        Figure triangle = new Triangle(3.0, 4.0, 5.0);
        System.out.println(triangle);
        System.out.println("Area: " + triangle.getArea());
        System.out.println("Perimeter: " + triangle.getPerimeter());
    }
}
"""

class Store {
    private Product[] products;

    public Store(Product[] products) {
        this.products = products;
    }

    public Product[] getProducts() {
        return products;
    }

    public void setProducts(Product[] products) {
        this.products = products;
    }
}

class Product {
    private double price;
    private String expirationDate;

    public Product(double price, String expirationDate) {
        this.price = price;
        this.expirationDate = expirationDate;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public String getExpirationDate() {
        return expirationDate;
    }

    public void setExpirationDate(String expirationDate) {
        this.expirationDate = expirationDate;
    }
}

class Milk extends Product {
    private double volume;

    public Milk(double price, String expirationDate, double volume) {
        super(price, expirationDate);
        this.volume = volume;
    }

    public double getVolume() {
        return volume;
    }

    public void setVolume(double volume) {
        this.volume = volume;
    }
}

class Cake extends Product {
    private double weight;

    public Cake(double price, String expirationDate, double weight) {
        super(price, expirationDate);
        this.weight = weight;
    }

    public double getWeight() {
        return weight;
    }

    public void setWeight(double weight) {
        this.weight = weight;
    }
}

class Sandwich extends Product {
    private double length;

    public Sandwich(double price, String expirationDate, double length) {
        super(price, expirationDate);
        this.length = length;
    }

    public double getLength() {
        return length;
    }

    public void setLength(double length) {
        this.length = length;
    }
}

public class Main {
    public static void main(String[] args) {
        Product milk1 = new Milk(2.50, "2025-12-01", 1.0);
        Product cake1 = new Cake(5.00, "2024-06-15", 0.5);
        Product sandwich1 = new Sandwich(3.00, "2024-01-01", 0.3);

        Product[] products = {milk1, cake1, sandwich1};

        Store store = new Store(products);

        System.out.println("Store Products:");
        for (Product product : store.getProducts()) {
            System.out.println(product.getClass().getSimpleName() + " - Price: " + product.getPrice() + ", Expiry: " + product.getExpirationDate());
        }
    }
}
